{"ast":null,"code":"import _objectSpread from \"/home/zetaharo/Desktop/SARAI/SARAiOJT18-19-Soils-DB/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/zetaharo/Desktop/SARAI/SARAiOJT18-19-Soils-DB/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/zetaharo/Desktop/SARAI/SARAiOJT18-19-Soils-DB/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport L from 'leaflet';\nimport Select from 'react-select';\nimport Draggable from 'react-draggable';\nimport { Card, CardImg, CardBody, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText, Col, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, ButtonDropdown, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup, LayersControl, ZoomControl } from 'react-leaflet'; //import {BananaMarkers} from \"./BananaMarkers\";\n\nimport { MDBDataTable, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nimport Tabletop from 'tabletop';\nimport { Modal, Glyphicon } from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\n\nconst MyPopupMarker = ({\n  content,\n  position,\n  icon\n}) => React.createElement(Marker, {\n  position: position,\n  icon: icon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(Popup, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, content));\n\nconst MyMarkersList = ({\n  markers\n}) => {\n  const items = markers.map((_ref) => {\n    let key = _ref.key,\n        props = _objectWithoutProperties(_ref, [\"key\"]);\n\n    return React.createElement(MyPopupMarker, Object.assign({\n      key: key\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, items);\n};\n\nconst BaseLayer = LayersControl.BaseLayer,\n      Overlay = LayersControl.Overlay;\nconst options = [{\n  value: 'banana',\n  label: 'Banana'\n}, {\n  value: 'cacao',\n  label: 'Cacao'\n}, {\n  value: 'corn',\n  label: 'Corn'\n}, {\n  value: 'coffee',\n  label: 'Coffee'\n}, {\n  value: 'rice',\n  label: 'Rice'\n}, {\n  value: 'soya',\n  label: 'Soya'\n}, {\n  value: 'sugarcane',\n  label: 'Sugarcane'\n}, {\n  value: 'tomato',\n  label: 'Tomato'\n}, {\n  value: 'all',\n  label: 'All'\n}];\nconst province = [{\n  value: 'laguna',\n  label: 'Laguna'\n}, {\n  value: 'oriental mindoro',\n  label: 'Oriental Mindoro'\n}, {\n  value: 'isabela',\n  label: 'Isabela'\n}, {\n  value: 'north cotabato',\n  label: 'North Cotabato'\n}, {\n  value: 'misamis oriental',\n  label: 'Misamis Oriental'\n}, {\n  value: 'ilocos norte',\n  label: 'Ilocos Norte'\n}, {\n  value: 'albay',\n  label: 'Albay'\n}, {\n  value: 'bukidnon',\n  label: 'Bukidnon'\n}, {\n  value: 'iloilo',\n  label: 'Iloilo'\n}, {\n  value: 'bicol',\n  label: 'Bicol'\n}, {\n  value: 'cebu',\n  label: 'Cebu'\n}, {\n  value: 'nueva ecija',\n  label: 'Nueva Ecija'\n}];\nconst municipality = [{\n  value: 'victoria',\n  label: 'Victoria'\n}, {\n  value: 'los baños',\n  label: 'Los Baños'\n}, {\n  value: 'jones',\n  label: 'Jones'\n}];\nvar cacaoIcon = L.icon({\n  iconUrl: 'cacaomarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar bananaIcon = L.icon({\n  iconUrl: 'bananamarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar cornIcon = L.icon({\n  iconUrl: 'cornmarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar coffeeIcon = L.icon({\n  iconUrl: 'coffeemarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar riceIcon = L.icon({\n  iconUrl: 'ricemarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar soyIcon = L.icon({\n  iconUrl: 'soybeanmarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar sugarCaneIcon = L.icon({\n  iconUrl: 'sugarcanemarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar tomatoIcon = L.icon({\n  iconUrl: 'tomatomarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nvar noIcon = L.icon({\n  iconUrl: 'nomarker.png',\n  iconSize: [55, 55],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n  shadowUrl: 'my-icon-shadow.png',\n  shadowSize: [68, 95]\n});\nconst bananaID = '1UEUrcBZWiPYr3f0sOEpcaS5SjpaFO1Dm7e2l47uOaRg';\nconst cornID = '1TGbBxufMVRBCGUpNvOTZN9cV6qOGiQaP3FiQD1187FA';\nconst cacaoID = '1OfAOQjibxGUTyPPAcgQ7tQX1rx_f2zsXK_MANy97Hq0';\nconst riceID = '1ytQ4eaRntQakcKyStP7_i1oAWjgqpTCimOY_HZ_CGrE';\nconst soybeanID = '1e4uZzHWHwTsKuR13Sc2Ezh_eA0ecvHKTNeQCgCHfl2Q';\nconst tomatoID = '1D9TS3yKL6laJCEGgD0zTMGVns0FRjQ3q2mEd_t91fNU';\nconst sugarCaneID = '1KXrAjUrXJ2oYCd7gC5Pl06Z5gIhVxjIwxyuMT_Nsezw';\nconst coffeeID = '1v8XwFx6rF7dI1ZG_Fm76EPTSxz9hruOCS9feshvzOn4';\nconst allCropsID = '10-SwhJ1XueMHIJ_64eOQIFocBKXbeiYwLcp-SVVP62k';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formSubmitted = event => {\n      event.preventDefault();\n      console.log(this.state.userMessage);\n    };\n\n    this.valueChanged = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState(prevState => ({\n        userMessage: _objectSpread({}, prevState.userMessage, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.dropDownChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }); //console.log(googleSheetID),\n\n      console.log(\"Option selected:\", selectedOption.value);\n    };\n\n    this.dropDownProvince = selectedProvince => {\n      this.setState({\n        selectedProvince\n      });\n      console.log(\"Option selected:\", selectedProvince);\n    };\n\n    this.dropDownMunicipality = selectedMunicipality => {\n      this.setState({\n        selectedMunicipality\n      });\n      console.log(\"Option selected:\", selectedMunicipality);\n    };\n\n    this.eventLogger = (e, data) => {\n      console.log('Event: ', e);\n      console.log('Data: ', data);\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.toggleCard = this.toggleCard.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.untoggleModal = this.untoggleModal.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.changeIcon = this.changeIcon.bind(this);\n    this.toggleSearch = this.toggleSearch.bind(this);\n    this.checkSoilProfile = this.checkSoilProfile.bind(this);\n    this.state = {\n      location: {\n        lat: 12.8797,\n        lng: 121.7740\n      },\n      haveUsersLocation: false,\n      zoom: 13,\n      userMessage: {\n        name: '',\n        message: ''\n      },\n      collapse: false,\n      collapseCard: true,\n      dropdownOpen: false,\n      selectedOption: null,\n      selectedProvince: null,\n      selectedMunicipality: null,\n      dataSet: [],\n      tableRows: [],\n      modal: false,\n      show: false,\n      modalData: [],\n      crop: null,\n      pH: null,\n      om: null,\n      nitrogen: null,\n      phosphorus: null,\n      pAnalysis: null,\n      potassium: null,\n      texturalGrade: null,\n      remarks: null,\n      collaborator: null,\n      barangay: null,\n      municipality: null,\n      province: null,\n      latitude: null,\n      longitude: null,\n      dateSampled: null,\n      soilProfile: null,\n      provinceList: [],\n      markers: [],\n      googleSheetID: null,\n      setBoolean: false,\n      pdfText: null,\n      soilPdf: null\n    };\n  }\n\n  componentDidMount() {\n    Tabletop.init({\n      key: '10-SwhJ1XueMHIJ_64eOQIFocBKXbeiYwLcp-SVVP62k',\n      callback: googleData => {\n        console.log(googleData);\n        this.setState({\n          provinceList: googleData.map(post => {\n            return {\n              value: post.province,\n              label: post.province\n            };\n          })\n        });\n      },\n      simpleSheet: true\n    });\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        haveUsersLocation: true,\n        zoom: 13\n      });\n    }, () => {\n      console.log('Failure to fetch location');\n      fetch('https://ipapi.co/json').then(res => res.json()).then(location => {\n        console.log(location);\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    Tabletop.init({\n      key: this.state.googleSheetID,\n      callback: googleData => {\n        console.log(googleData);\n        this.setState({\n          tableRows: googleData.map(post => {\n            return {\n              button: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 308\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 310\n                },\n                __self: this\n              }, React.createElement(\"button\", {\n                id: \"button_toggle\",\n                onClick: () => this.toggleModal(post),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 312\n                },\n                __self: this\n              }, React.createElement(FontAwesome, {\n                className: \"fas fa-plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 313\n                },\n                __self: this\n              })))),\n              crop: post.crop,\n              pH: post.pH,\n              om: post.om,\n              nitrogen: post.nitrogen,\n              phosphorus: post.phosphorus,\n              pAnalysis: post.pAnalysis,\n              potassium: post.potassium\n            };\n          }),\n          provinceList: googleData.map(post => {\n            return {\n              value: post.province,\n              label: post.province\n            };\n          }),\n          markers: googleData.map(post => {\n            return {\n              key: post.id,\n              position: [post.latitude, post.longitude],\n              content: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 347\n                },\n                __self: this\n              }, \"Province: \", post.province, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 349\n                },\n                __self: this\n              }), \"Crop: \", post.crop, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 351\n                },\n                __self: this\n              }), \"pH: \", post.pH, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 353\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                onClick: () => this.toggleModal(post),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 354\n                },\n                __self: this\n              }, \"See more\")),\n              icon: this.changeIcon(post)\n            };\n          })\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  componentDidUpdate() {\n    Tabletop.init({\n      key: this.state.googleSheetID,\n      callback: googleData => {\n        console.log(googleData);\n        this.setState({\n          tableRows: googleData.map(post => {\n            return {\n              button: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 380\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 382\n                },\n                __self: this\n              }, React.createElement(\"button\", {\n                id: \"button_toggle\",\n                onClick: () => this.toggleModal(post),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 384\n                },\n                __self: this\n              }, React.createElement(FontAwesome, {\n                className: \"fas fa-plus\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 385\n                },\n                __self: this\n              })))),\n              crop: post.crop,\n              pH: post.pH,\n              om: post.om,\n              nitrogen: post.nitrogen,\n              phosphorus: post.phosphorus,\n              pAnalysis: post.pAnalysis,\n              potassium: post.potassium\n            };\n          }),\n          provinceList: googleData.map(post => {\n            return {\n              value: post.province,\n              label: post.province\n            };\n          }),\n          markers: googleData.map(post => {\n            console.log(\"Provinces are: \");\n            console.log(this.state.selectedProvince.label);\n            console.log(post.province);\n            return {\n              key: post.id,\n              position: [post.latitude, post.longitude],\n              content: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 421\n                },\n                __self: this\n              }, \"Province: \", post.province, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 423\n                },\n                __self: this\n              }), \"Crop: \", post.crop, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 425\n                },\n                __self: this\n              }), \"pH: \", post.pH, React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 427\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                onClick: () => this.toggleModal(post),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 428\n                },\n                __self: this\n              }, \"See more\")),\n              icon: this.changeIcon(post)\n            };\n          })\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  toggle() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  changeIcon(post) {\n    var cropIcon;\n\n    if (this.state.selectedProvince === 'null' && this.state.selectedOption.value === 'all') {\n      if (post.crop === \"Banana\") {\n        cropIcon = bananaIcon;\n      } else if (post.crop === \"Cacao\") {\n        cropIcon = cacaoIcon;\n      } else if (post.crop === \"Coffee\") {\n        cropIcon = coffeeIcon;\n      } else if (post.crop === \"Corn\") {\n        cropIcon = cornIcon;\n      } else if (post.crop === \"Rice\") {\n        cropIcon = riceIcon;\n      } else if (post.crop === \"Tomato\") {\n        cropIcon = tomatoIcon;\n      } else if (post.crop === \"Sugarcane\") {\n        cropIcon = sugarCaneIcon;\n      } else if (post.crop === \"Soybean\") {\n        cropIcon = soyIcon;\n      }\n    } else if (post.province === this.state.selectedProvince.label) {\n      if (post.crop === \"Banana\") {\n        cropIcon = bananaIcon;\n      } else if (post.crop === \"Cacao\") {\n        cropIcon = cacaoIcon;\n      } else if (post.crop === \"Coffee\") {\n        cropIcon = coffeeIcon;\n      } else if (post.crop === \"Corn\") {\n        cropIcon = cornIcon;\n      } else if (post.crop === \"Rice\") {\n        cropIcon = riceIcon;\n      } else if (post.crop === \"Tomato\") {\n        cropIcon = tomatoIcon;\n      } else if (post.crop === \"Sugarcane\") {\n        cropIcon = sugarCaneIcon;\n      } else if (post.crop === \"Soybean\") {\n        cropIcon = soyIcon;\n      }\n    } else {\n      cropIcon = noIcon;\n    }\n\n    return cropIcon;\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  toggleModal(post) {\n    this.setState({\n      modal: !this.state.modal,\n      crop: post.crop,\n      pH: post.pH,\n      om: post.om,\n      nitrogen: post.nitrogen,\n      phosphorus: post.phosphorus,\n      pAnalysis: post.pAnalysis,\n      potassium: post.potassium,\n      texturalGrade: post.texturalGrade,\n      remarks: post.remarks,\n      collaborator: post.collaborator,\n      barangay: post.barangay,\n      municipality: post.municipality,\n      province: post.province,\n      latitude: post.latitude,\n      longitude: post.longitude,\n      dateSampled: post.dateSampled,\n      soilProfile: post.soilProfile\n    });\n  }\n\n  untoggleModal() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  toggleCard() {\n    this.setState(state => ({\n      collapseCard: !state.collapseCard\n    }));\n  }\n\n  buttonToggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  toggleSearch() {\n    if (this.state.selectedOption.value === 'banana') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: bananaID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'cacao') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: cacaoID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'coffee') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: coffeeID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'corn') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: cornID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'rice') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: riceID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'sugarcane') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: sugarCaneID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'soya') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: soybeanID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'tomato') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: tomatoID\n        });\n      }, 2000);\n    } else if (this.state.selectedOption.value === 'all') {\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: ''\n        });\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n          googleSheetID: allCropsID\n        });\n      }, 2000);\n    }\n\n    console.log(this.state.selectedOption.value);\n  }\n\n  checkSoilProfile() {\n    if (this.state.soilProfile === null) {\n      this.setState({\n        pdfText: React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 706\n          },\n          __self: this\n        }, \"None\")\n      });\n    } else {\n      this.setState({\n        pdfText: React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 711\n          },\n          __self: this\n        }, \"Download PDF\")\n      });\n    }\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    const selectedOption = this.state.selectedOption;\n    const selectedProvince = this.state.selectedProvince;\n    const selectedMunicipality = this.state.selectedMunicipality;\n    const dataSet = this.state.dataSet;\n    const open = this.state.open;\n    const dataSheet = {\n      columns: [{\n        label: '+',\n        field: 'crop',\n        sort: 'asc',\n        width: 10\n      }, {\n        label: 'Crop',\n        field: 'crop',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'pH',\n        field: 'pH',\n        sort: 'asc',\n        width: 200\n      }, {\n        label: 'Organic Matter (OM)',\n        field: 'om',\n        sort: 'asc',\n        width: 200\n      }, {\n        label: 'Nitrogen (N)',\n        field: 'nitrogen',\n        sort: 'asc',\n        width: 270\n      }, {\n        label: 'Phosphorus (P)',\n        field: 'phosphorus',\n        sort: 'asc',\n        width: 270\n      }, {\n        label: 'P Analysis (P)',\n        field: 'pAnalysis',\n        sort: 'asc',\n        width: 270\n      }, {\n        label: 'Potassium (K)',\n        field: 'potassium',\n        sort: 'asc',\n        width: 270\n      }],\n      rows: this.state.tableRows\n    };\n    const modalSheet = {\n      crop: this.state.crop,\n      pH: this.state.pH,\n      om: this.state.om,\n      nitrogen: this.state.nitrogen,\n      phosphorus: this.state.phosphorus,\n      pAnalysis: this.state.pAnalysis,\n      potassium: this.state.potassium,\n      texturalGrade: this.state.texturalGrade,\n      remarks: this.state.remarks,\n      collaborator: this.state.collaborator,\n      barangay: this.state.barangay,\n      municipality: this.state.municipality,\n      province: this.state.province,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      dateSampled: this.state.dateSampled,\n      soilProfile: this.state.soilProfile\n    };\n    const pList = this.state.provinceList.filter((val, id, array) => array.indexOf(val) == id);\n    const mList = this.state.markersList;\n    console.log(pList);\n    return React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"navClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      id: \"navClass\",\n      color: \"light\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"navbar-brand\",\n      src: \"header_green.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    })), React.createElement(NavbarToggler, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"mdl-navigation__link main-header-top-link\",\n      href: \"http://sarai.ph/about-us\",\n      id: \"about-us-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825\n      },\n      __self: this\n    }, \"About Us\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"mdl-navigation__link main-header-top-link\",\n      href: \"https://sarai-community.net/\",\n      id: \"sarai-community\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }, \"Sarai Community\")), React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      nav: true,\n      caret: true,\n      id: \"explore-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, \"Crops\"), React.createElement(DropdownMenu, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837\n      },\n      __self: this\n    }, \"Rice\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, \"Corn\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, \"Banana\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }, \"Coconut\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, \"Coffee\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, \"Cacao\"))), React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      nav: true,\n      caret: true,\n      id: \"dss-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, \"Maps\"), React.createElement(DropdownMenu, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      href: \"http://202.92.144.49/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    }, \"Suitability Maps\"), React.createElement(DropdownItem, {\n      href: \"http://139.59.125.198/ndvi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, \"Normalized Difference Vegetation Index\"), React.createElement(DropdownItem, {\n      href: \"http://139.59.125.198/rainfall-maps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, \"Rainfall Map\"), React.createElement(DropdownItem, {\n      href: \"http://139.59.125.198/agri-drought\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, \"SVTR Map\"), React.createElement(DropdownItem, {\n      href: \"http://139.59.125.198/evi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    }, \"Enhanced Vegetation Index\"))), React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      nav: true,\n      caret: true,\n      id: \"get-involved-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    }, \"Services\"), React.createElement(DropdownMenu, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      href: \"http://sarai.ph/heat-map-rainfall-outlook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    }, \"Rainfall Outlook\"), React.createElement(DropdownItem, {\n      href: \"http://sarai.ph/suitability-gallery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, \"Suitability\"), React.createElement(DropdownItem, {\n      href: \"http://139.59.125.198/drought-forecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }, \"Drought Forecast\"), React.createElement(DropdownItem, {\n      href: \"http://sarai.ph/weather-monitoring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, \"Weather Monitoring\"))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"dost-pcaarrd-uplb-logo\",\n      src: \"dostpcaarrduplb.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900\n      },\n      __self: this\n    }))))))), React.createElement(Map, {\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      zoomControl: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, React.createElement(LayersControl, {\n      position: \"topright\",\n      id: \"layers-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, React.createElement(BaseLayer, {\n      checked: true,\n      name: \"OpenStreetMap.Mapnik\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    })), React.createElement(BaseLayer, {\n      name: \"OpenStreetMap.BlackAndWhite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    })), React.createElement(BaseLayer, {\n      name: \"OpenTopoMaps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925\n      },\n      __self: this\n    })), React.createElement(BaseLayer, {\n      name: \"Esri.WorldStreetMap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    })), React.createElement(BaseLayer, {\n      name: \"Esri.WorldImagery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }))), React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943\n      },\n      __self: this\n    }), React.createElement(ZoomControl, {\n      position: \"bottomleft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    }), React.createElement(MyMarkersList, {\n      markers: this.state.markers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951\n      },\n      __self: this\n    })), React.createElement(Collapse, {\n      isOpen: this.state.collapseCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-bounds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955\n      },\n      __self: this\n    }, React.createElement(Draggable, {\n      bounds: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      id: \"message-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"50%\",\n      height: \"50%\",\n      src: \"SoilsCardTitle.png\",\n      draggable: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958\n      },\n      __self: this\n    }), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959\n      },\n      __self: this\n    }, \"Select Province\"), React.createElement(Form, {\n      onSubmit: this.formSubmitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: selectedProvince,\n      onChange: this.dropDownProvince,\n      options: province,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965\n      },\n      __self: this\n    })))), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969\n      },\n      __self: this\n    }, \"Select Crop\"), React.createElement(Form, {\n      onSubmit: this.formSubmitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.dropDownChange,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: this.toggleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980\n      },\n      __self: this\n    }, \"Search\"), \" \", ' '))))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      entriesOptions: [5, 20, 25],\n      entries: 5,\n      pagesAmount: 4,\n      data: dataSheet,\n      sorting: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992\n      },\n      __self: this\n    }))))), React.createElement(MDBModal, {\n      id: \"modal_1\",\n      isOpen: this.state.modal,\n      toggle: this.toggleModal,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"sarai-modal\",\n      src: \"header_green.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      class: \"soils-modal\",\n      src: \"SoilsCardTitle.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    })), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003\n      },\n      __self: this\n    }, \"Date Sampled:\"), \" \", modalSheet.dateSampled, \"  \\xA0 \\xA0 \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003\n      },\n      __self: this\n    }, \"Coordinates: \"), \" \", modalSheet.latitude, \"N , \", modalSheet.longitude, \"E\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005\n      },\n      __self: this\n    }, \"Province:\"), \" \", modalSheet.province, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007\n      },\n      __self: this\n    }, \"Municipality\"), \" \", modalSheet.municipality, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009\n      },\n      __self: this\n    }, \"Barangay\"), \" \", modalSheet.barangay, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011\n      },\n      __self: this\n    }, \"Crop:\"), \" \", modalSheet.crop, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013\n      },\n      __self: this\n    }, \"pH:\"), \" \", modalSheet.pH, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    }, \"Organic Matter (OM):\"), \" \", modalSheet.om, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, \"Nitrogen: \"), \" \", modalSheet.nitrogen, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019\n      },\n      __self: this\n    }, \"Phosphorus:\"), \" \", modalSheet.phosphorus, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021\n      },\n      __self: this\n    }, \"P Analysis:\"), \" \", modalSheet.pAnalysis, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023\n      },\n      __self: this\n    }, \"Potassium:\"), \" \", modalSheet.potassium, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025\n      },\n      __self: this\n    }, \"Textural Grade:\"), \" \", modalSheet.texturalGrade, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027\n      },\n      __self: this\n    }, \"Remarks:\"), \" \", modalSheet.remarks, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029\n      },\n      __self: this\n    }, \"Soil Profile Series:\"), \" \", React.createElement(\"a\", {\n      href: modalSheet.soilProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029\n      },\n      __self: this\n    }, \"Download Soil Profile\")), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.untoggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zetaharo/Desktop/SARAI/SARAiOJT18-19-Soils-DB/src/App.js"],"names":["React","Component","Fragment","L","Select","Draggable","Card","CardImg","CardBody","Button","CardTitle","CardText","Form","FormGroup","Label","Input","FormText","Col","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","ButtonDropdown","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Map","TileLayer","Marker","Popup","LayersControl","ZoomControl","MDBDataTable","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","MDBTable","MDBTableBody","MDBTableHead","Tabletop","Modal","Glyphicon","FontAwesome","MyPopupMarker","content","position","icon","MyMarkersList","markers","items","map","key","props","BaseLayer","Overlay","options","value","label","province","municipality","cacaoIcon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","bananaIcon","cornIcon","coffeeIcon","riceIcon","soyIcon","sugarCaneIcon","tomatoIcon","noIcon","bananaID","cornID","cacaoID","riceID","soybeanID","tomatoID","sugarCaneID","coffeeID","allCropsID","App","constructor","formSubmitted","event","preventDefault","console","log","state","userMessage","valueChanged","target","name","setState","prevState","dropDownChange","selectedOption","dropDownProvince","selectedProvince","dropDownMunicipality","selectedMunicipality","eventLogger","e","data","toggle","bind","toggleCard","toggleModal","untoggleModal","handleShow","handleClose","changeIcon","toggleSearch","checkSoilProfile","location","lat","lng","haveUsersLocation","zoom","message","collapse","collapseCard","dropdownOpen","dataSet","tableRows","modal","show","modalData","crop","pH","om","nitrogen","phosphorus","pAnalysis","potassium","texturalGrade","remarks","collaborator","barangay","latitude","longitude","dateSampled","soilProfile","provinceList","googleSheetID","setBoolean","pdfText","soilPdf","componentDidMount","init","callback","googleData","post","simpleSheet","navigator","geolocation","getCurrentPosition","coords","fetch","then","res","json","componentWillUnmount","button","id","componentDidUpdate","cropIcon","buttonToggle","setTimeout","render","open","dataSheet","columns","field","sort","width","rows","modalSheet","pList","filter","val","array","indexOf","mList","markersList","isOpen"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport L from 'leaflet';\nimport Select from 'react-select';\nimport Draggable from 'react-draggable';\nimport { Card, CardImg, CardBody, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText, Col, Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup, LayersControl, ZoomControl } from 'react-leaflet';\n//import {BananaMarkers} from \"./BananaMarkers\";\n\nimport { MDBDataTable, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, \n        MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBTable, \n        MDBTableBody, MDBTableHead\n        } from \"mdbreact\";\nimport Tabletop from 'tabletop';\nimport {Modal, Glyphicon} from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome';\n\ntype Position = [number, number];\n\ntype Props = {|\n  content: string,\n  position: Position,\n  icon: bananaIcon\n|};\n\ntype MarkerData = {| ...Props, key: string |};\n\nconst MyPopupMarker = ({ content, position, icon }: Props) => (\n  <Marker position={position} icon={icon}>\n    <Popup>{content}</Popup>\n  </Marker>\n);\n\nconst MyMarkersList = ({ markers }: { markers: Array<MarkerData> }) => {\n  const items = markers.map(({ key, ...props }) => (\n    <MyPopupMarker key={key} {...props} />\n  ))\n  return <Fragment>{items}</Fragment>\n};\n\ntype State = {\n  markers: Array<MarkerData>,\n};\n\n\n\nconst { BaseLayer, Overlay } = LayersControl;\n\n\nconst options = [\n  { value: 'banana', label: 'Banana' },\n  { value: 'cacao', label: 'Cacao' },\n  { value: 'corn', label: 'Corn' },\n  { value: 'coffee', label: 'Coffee' },\n  { value: 'rice', label: 'Rice' },\n  { value: 'soya', label: 'Soya' },\n  { value: 'sugarcane', label: 'Sugarcane' },\n  { value: 'tomato', label: 'Tomato' },\n  { value: 'all', label: 'All' },\n];\n\nconst province = [\n  { value: 'laguna', \n  label: 'Laguna' },\n  { value: 'oriental mindoro', \n  label: 'Oriental Mindoro' },\n  { value: 'isabela', \n  label: 'Isabela' },\n  { value: 'north cotabato', \n  label: 'North Cotabato' },\n  { value: 'misamis oriental', \n  label: 'Misamis Oriental' },\n  { value: 'ilocos norte', \n  label: 'Ilocos Norte' },\n  { value: 'albay', \n  label: 'Albay' },\n  { value: 'bukidnon', \n  label: 'Bukidnon' },\n  { value: 'iloilo', \n  label: 'Iloilo' },\n  { value: 'bicol', \n  label: 'Bicol' },\n  { value: 'cebu', \n  label: 'Cebu' },\n  { value: 'nueva ecija', \n  label: 'Nueva Ecija' },    \n];\n\nconst municipality = [\n  { value: 'victoria', label: 'Victoria' },\n  { value: 'los baños', label: 'Los Baños' },\n  { value: 'jones', label: 'Jones' },\n];\n\nvar cacaoIcon = L.icon({\n    iconUrl: 'cacaomarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar bananaIcon = L.icon({\n    iconUrl: 'bananamarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar cornIcon = L.icon({\n    iconUrl: 'cornmarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar coffeeIcon = L.icon({\n    iconUrl: 'coffeemarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar riceIcon = L.icon({\n    iconUrl: 'ricemarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar soyIcon = L.icon({\n    iconUrl: 'soybeanmarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar sugarCaneIcon = L.icon({\n    iconUrl: 'sugarcanemarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar tomatoIcon = L.icon({\n    iconUrl: 'tomatomarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nvar noIcon = L.icon({\n    iconUrl: 'nomarker.png',\n    iconSize: [55, 55],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41], \n    shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n});\n\nconst bananaID = '1UEUrcBZWiPYr3f0sOEpcaS5SjpaFO1Dm7e2l47uOaRg';\nconst cornID = '1TGbBxufMVRBCGUpNvOTZN9cV6qOGiQaP3FiQD1187FA';\nconst cacaoID = '1OfAOQjibxGUTyPPAcgQ7tQX1rx_f2zsXK_MANy97Hq0';\nconst riceID = '1ytQ4eaRntQakcKyStP7_i1oAWjgqpTCimOY_HZ_CGrE';\nconst soybeanID = '1e4uZzHWHwTsKuR13Sc2Ezh_eA0ecvHKTNeQCgCHfl2Q';\nconst tomatoID = '1D9TS3yKL6laJCEGgD0zTMGVns0FRjQ3q2mEd_t91fNU';\nconst sugarCaneID = '1KXrAjUrXJ2oYCd7gC5Pl06Z5gIhVxjIwxyuMT_Nsezw';\nconst coffeeID = '1v8XwFx6rF7dI1ZG_Fm76EPTSxz9hruOCS9feshvzOn4';\nconst allCropsID = '10-SwhJ1XueMHIJ_64eOQIFocBKXbeiYwLcp-SVVP62k';\n\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.toggleCard = this.toggleCard.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.untoggleModal = this.untoggleModal.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.changeIcon = this.changeIcon.bind(this);\n    this.toggleSearch = this.toggleSearch.bind(this);\n    this.checkSoilProfile = this.checkSoilProfile.bind(this);\n    this.state = { \n      location: {\n        lat: 12.8797,\n        lng: 121.7740,\n      },\n      haveUsersLocation: false,\n      zoom: 13,\n      userMessage: {\n        name: '',\n        message: '',\n      },\n      collapse: false,\n      collapseCard: true,\n      dropdownOpen: false,\n      selectedOption: null,\n      selectedProvince: null,\n      selectedMunicipality: null,\n      dataSet: [],\n      tableRows: [],\n      modal: false,\n      show: false,\n      modalData: [],\n      crop: null,\n      pH: null,\n      om: null,\n      nitrogen: null,\n      phosphorus: null,\n      pAnalysis: null,\n      potassium: null,\n      texturalGrade: null,\n      remarks: null,\n      collaborator: null,\n      barangay: null,\n      municipality: null,\n      province: null,\n      latitude: null,\n      longitude: null,\n      dateSampled: null,\n      soilProfile: null,\n      provinceList: [],\n      markers: [],\n      googleSheetID: null,\n      setBoolean: false,\n      pdfText: null,\n      soilPdf: null,\n    };\n\n  }\n  componentDidMount() {\n    Tabletop.init({\n      key: '10-SwhJ1XueMHIJ_64eOQIFocBKXbeiYwLcp-SVVP62k',\n      callback: googleData => {\n        console.log(googleData)\n        this.setState({\n          provinceList: googleData.map((post) => {\n            return (\n              \n                { \n                value: post.province, label: post.province \n                }\n              \n            )\n          }),\n        })\n      },\n      simpleSheet: true\n    })\n\n    navigator.geolocation.getCurrentPosition((position) =>  {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude \n        },\n        haveUsersLocation: true,\n        zoom: 13,\n      });\n    }, () => {\n      console.log('Failure to fetch location');\n      fetch('https://ipapi.co/json')\n        .then(res => res.json())\n        .then(location => {\n          console.log(location);\n        });\n    });\n  }\n\n  componentWillUnmount() {\n    Tabletop.init({\n      key: this.state.googleSheetID,\n      callback: googleData => {\n        console.log(googleData)\n        this.setState({\n          tableRows: googleData.map((post) => {\n            return (\n              { \n                button: <div>\n\n                        <div>\n                        \n                        <button id = \"button_toggle\" onClick={() => this.toggleModal(post)} >\n                        <FontAwesome\n                          className='fas fa-plus'\n                        />\n                        </button>\n                        </div>\n                        </div>\n                        ,\n                crop: post.crop,\n                pH: post.pH,\n                om: post.om,\n                nitrogen: post.nitrogen,\n                phosphorus: post.phosphorus,\n                pAnalysis: post.pAnalysis,\n                potassium: post.potassium,\n              }\n            )\n          }),\n          provinceList: googleData.map((post) => {\n            return (\n              \n                { \n                value: post.province, label: post.province \n                }\n              \n            )\n          }),\n          markers: googleData.map((post) => {\n            \n            return (\n              {\n                key: post.id,\n                position: [post.latitude, post.longitude],\n                content:\n                        \n                        <div>\n                        Province: {post.province}\n                        <br /> \n                        Crop: {post.crop}\n                        <br />\n                        pH: {post.pH}\n                        <br/> \n                        <button onClick={() => this.toggleModal(post)} >\n                        See more\n                        </button>\n                        </div>\n                        ,\n                  icon: this.changeIcon(post),\n\n              }\n            )\n          }),\n        })\n      },\n      simpleSheet: true\n    })\n  }\n\n\n  componentDidUpdate() {\n    Tabletop.init({\n      key: this.state.googleSheetID,\n      callback: googleData => {\n        console.log(googleData)\n        this.setState({\n          tableRows: googleData.map((post) => {\n            return (\n              { \n                button: <div>\n\n                        <div>\n                        \n                        <button id = \"button_toggle\" onClick={() => this.toggleModal(post)} >\n                        <FontAwesome\n                          className='fas fa-plus'\n                        />\n                        </button>\n                        </div>\n                        </div>\n                        ,\n                crop: post.crop,\n                pH: post.pH,\n                om: post.om,\n                nitrogen: post.nitrogen,\n                phosphorus: post.phosphorus,\n                pAnalysis: post.pAnalysis,\n                potassium: post.potassium,\n              }\n            )\n          }),\n          provinceList: googleData.map((post) => {\n            return (\n              \n                { \n                value: post.province, label: post.province \n                }\n              \n            )\n          }),\n          markers: googleData.map((post) => {\n            console.log(\"Provinces are: \");\n            console.log(this.state.selectedProvince.label);\n            console.log(post.province);\n              return (\n              {\n                key: post.id,\n                position: [post.latitude, post.longitude],\n                content:\n\n                        <div>\n                        Province: {post.province}\n                        <br /> \n                        Crop: {post.crop}\n                        <br />\n                        pH: {post.pH}\n                        <br/> \n                        <button onClick={() => this.toggleModal(post)} >\n                        See more\n                        </button>\n                        </div>\n                        ,\n                  icon: this.changeIcon(post),\n\n              }\n            )\n          }),\n        })\n      },\n      simpleSheet: true\n    })\n  }\n\n  \n\n  formSubmitted = (event) => {\n    event.preventDefault();\n    console.log(this.state.userMessage)\n  }\n\n  valueChanged = (event) => {\n    const { name, value } = event.target;\n    this.setState((prevState) => ({\n       userMessage: {\n          ...prevState.userMessage,\n          [name]: value\n       }\n    }))\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  changeIcon(post) {\n    var cropIcon;\n    if (this.state.selectedProvince === 'null' && this.state.selectedOption.value==='all'){\n      if (post.crop === \"Banana\"){\n        cropIcon = bananaIcon;\n      }\n      else if (post.crop === \"Cacao\"){\n        cropIcon = cacaoIcon;\n      }\n      else if (post.crop === \"Coffee\"){\n        cropIcon = coffeeIcon;\n      }\n      else if (post.crop === \"Corn\"){\n        cropIcon = cornIcon;\n      }\n      else if (post.crop === \"Rice\"){\n        cropIcon = riceIcon;\n      }\n      else if (post.crop === \"Tomato\"){\n        cropIcon = tomatoIcon;\n      }\n      else if (post.crop === \"Sugarcane\"){\n        cropIcon = sugarCaneIcon;\n      }\n\n      else if (post.crop === \"Soybean\"){\n        cropIcon = soyIcon;\n      }\n    }\n    else if (post.province===this.state.selectedProvince.label){\n      if (post.crop === \"Banana\"){\n        cropIcon = bananaIcon;\n      }\n      else if (post.crop === \"Cacao\"){\n        cropIcon = cacaoIcon;\n      }\n      else if (post.crop === \"Coffee\"){\n        cropIcon = coffeeIcon;\n      }\n      else if (post.crop === \"Corn\"){\n        cropIcon = cornIcon;\n      }\n      else if (post.crop === \"Rice\"){\n        cropIcon = riceIcon;\n      }\n      else if (post.crop === \"Tomato\"){\n        cropIcon = tomatoIcon;\n      }\n      else if (post.crop === \"Sugarcane\"){\n        cropIcon = sugarCaneIcon;\n      }\n\n      else if (post.crop === \"Soybean\"){\n        cropIcon = soyIcon;\n      }\n    }\n\n    else {\n      cropIcon = noIcon;\n    }\n    return cropIcon\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  toggleModal(post) {\n    this.setState({\n      modal: !this.state.modal,\n      crop: post.crop,\n      pH: post.pH,\n      om: post.om,\n      nitrogen: post.nitrogen,\n      phosphorus: post.phosphorus,\n      pAnalysis: post.pAnalysis,\n      potassium: post.potassium,\n      texturalGrade: post.texturalGrade,\n      remarks: post.remarks,\n      collaborator: post.collaborator,\n      barangay: post.barangay,\n      municipality: post.municipality,\n      province: post.province,\n      latitude: post.latitude,\n      longitude: post.longitude,\n      dateSampled: post.dateSampled,\n      soilProfile: post.soilProfile,\n    });\n\n\n  }\n\n  untoggleModal() {\n    this.setState({\n      modal: !this.state.modal,\n     \n    });\n\n    \n  }\n\n\n  toggleCard() {\n    this.setState(state => ({ collapseCard: !state.collapseCard }));\n  }\n\n  buttonToggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  dropDownChange = selectedOption => {\n    this.setState({ \n      selectedOption, \n    });\n    \n    //console.log(googleSheetID),\n    console.log(`Option selected:`, selectedOption.value);\n  }\n\n  toggleSearch() {\n    if (this.state.selectedOption.value === 'banana'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: bananaID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'cacao'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: cacaoID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'coffee'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: coffeeID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'corn'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: cornID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'rice'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: riceID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'sugarcane'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: sugarCaneID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'soya'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: soybeanID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'tomato'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: tomatoID,\n        })\n      }, 2000);\n    }\n    else if (this.state.selectedOption.value === 'all'){\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: '',\n        })\n      }, 100);\n      setTimeout(() => {\n        this.setState({\n        googleSheetID: allCropsID,\n        })\n      }, 2000);\n    }\n    \n    console.log(this.state.selectedOption.value)\n  }\n\n  checkSoilProfile(){\n    if (this.state.soilProfile === null) {\n      this.setState({\n        pdfText: <b>None</b>,\n      })\n    }\n    else {\n      this.setState({\n        pdfText: <b>Download PDF</b>,\n      })\n    }\n  }\n\n  dropDownProvince = selectedProvince => {\n    this.setState({ selectedProvince });\n    console.log(`Option selected:`, selectedProvince);\n  }\n\n  dropDownMunicipality = selectedMunicipality => {\n    this.setState({ selectedMunicipality });\n    console.log(`Option selected:`, selectedMunicipality);\n  }\n\n  eventLogger = (e: MouseEvent, data: Object) => {\n    console.log('Event: ', e);\n    console.log('Data: ', data);\n  };\n\n  render(){\n    const position = [this.state.location.lat, this.state.location.lng]\n    const { selectedOption } = this.state;\n    const { selectedProvince } = this.state;\n    const { selectedMunicipality } = this.state;\n    const {dataSet} = this.state;\n    const {open} = this.state;\n\n    const dataSheet = {\n      columns: [\n        {\n          label: '+',\n          field: 'crop',\n          sort: 'asc',\n          width: 10\n        },\n        {\n          label: 'Crop',\n          field: 'crop',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'pH',\n          field: 'pH',\n          sort: 'asc',\n          width: 200\n        },\n        {\n          label: 'Organic Matter (OM)',\n          field: 'om',\n          sort: 'asc',\n          width: 200\n        },\n        {\n          label: 'Nitrogen (N)',\n          field: 'nitrogen',\n          sort: 'asc',\n          width: 270\n        },\n        {\n          label: 'Phosphorus (P)',\n          field: 'phosphorus',\n          sort: 'asc',\n          width: 270\n        },\n        {\n          label: 'P Analysis (P)',\n          field: 'pAnalysis',\n          sort: 'asc',\n          width: 270\n        },\n        {\n          label: 'Potassium (K)',\n          field: 'potassium',\n          sort: 'asc',\n          width: 270\n        },\n      ],\n      rows: this.state.tableRows\n    };\n\n    const modalSheet = {\n      crop: this.state.crop,\n      pH: this.state.pH,\n      om: this.state.om,\n      nitrogen: this.state.nitrogen,\n      phosphorus: this.state.phosphorus,\n      pAnalysis: this.state.pAnalysis,\n      potassium: this.state.potassium,\n      texturalGrade: this.state.texturalGrade,\n      remarks: this.state.remarks,\n      collaborator: this.state.collaborator,\n      barangay: this.state.barangay,\n      municipality: this.state.municipality,\n      province: this.state.province,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      dateSampled: this.state.dateSampled,\n      soilProfile: this.state.soilProfile,\n    };\n\n    const pList = this.state.provinceList.filter((val, id, array) => array.indexOf(val) == id);\n    const mList = this.state.markersList;\n    console.log(pList);\n    return (\n      <div className=\"map\">\n        <div id=\"navClass\">\n        <Navbar id=\"navClass\" color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\"><img class=\"navbar-brand\" src=\"header_green.png\"></img></NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <a class=\"mdl-navigation__link main-header-top-link\" href=\"http://sarai.ph/about-us\" id=\"about-us-link\">About Us\n              </a>\n              </NavItem>\n              <NavItem>\n                <a class=\"mdl-navigation__link main-header-top-link\" href=\"https://sarai-community.net/\" id=\"sarai-community\">Sarai Community\n              </a>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret id=\"explore-link\" >\n                  Crops\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Rice\n                  </DropdownItem>\n                  <DropdownItem>\n                    Corn\n                  </DropdownItem>\n                  <DropdownItem>\n                    Banana\n                  </DropdownItem>\n                  <DropdownItem>\n                    Coconut\n                  </DropdownItem>\n                  <DropdownItem>\n                    Coffee\n                  </DropdownItem>\n                  <DropdownItem>\n                    Cacao\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret id=\"dss-link\" >\n                  Maps\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href=\"http://202.92.144.49/\">\n                    Suitability Maps\n                  </DropdownItem>\n                  <DropdownItem href=\"http://139.59.125.198/ndvi\">\n                    Normalized Difference Vegetation Index\n                  </DropdownItem>\n                  <DropdownItem href=\"http://139.59.125.198/rainfall-maps\">\n                    Rainfall Map\n                  </DropdownItem>\n                  <DropdownItem href=\"http://139.59.125.198/agri-drought\">\n                    SVTR Map\n                  </DropdownItem>\n                  <DropdownItem href=\"http://139.59.125.198/evi\">\n                    Enhanced Vegetation Index\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret id=\"get-involved-link\" >\n                  Services\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href=\"http://sarai.ph/heat-map-rainfall-outlook\">\n                    Rainfall Outlook\n                  </DropdownItem>\n                  <DropdownItem href=\"http://sarai.ph/suitability-gallery\">\n                    Suitability\n                  </DropdownItem>\n                  <DropdownItem href=\"http://139.59.125.198/drought-forecast\">\n                    Drought Forecast\n                  </DropdownItem>\n                  <DropdownItem href=\"http://sarai.ph/weather-monitoring\">\n                    Weather Monitoring\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <NavItem>\n              <a>\n                <img class=\"dost-pcaarrd-uplb-logo\" src=\"dostpcaarrduplb.png\" />\n              </a>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        </div>\n\n\n\n        <Map className=\"map\" center={position} zoom={this.state.zoom} zoomControl={false}>\n          <LayersControl position=\"topright\" id=\"layers-control\">\n          <BaseLayer checked name=\"OpenStreetMap.Mapnik\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n          <BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n          <BaseLayer name=\"OpenTopoMaps\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n            />\n          </BaseLayer>\n           <BaseLayer name=\"Esri.WorldStreetMap\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}.png\"\n            />\n          </BaseLayer>\n          <BaseLayer name=\"Esri.WorldImagery\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.png\"\n            />\n          </BaseLayer>\n          </LayersControl>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            \n           \n          <ZoomControl position=\"bottomleft\" />\n          \n          <MyMarkersList markers={this.state.markers} />\n        </Map>\n\n        <Collapse isOpen={this.state.collapseCard}>\n        <div className=\"card-bounds\">\n        <Draggable bounds=\"parent\">\n         <Card body id='message-form'>\n          <CardImg top width=\"50%\" height=\"50%\" src=\"SoilsCardTitle.png\" draggable=\"false\"/>\n          <CardText>Select Province</CardText>\n          <Form onSubmit={this.formSubmitted}>\n\n            <FormGroup row>\n              <Label for=\"exampleSelect\"></Label>\n              <Col sm={10}>\n                <Select value={selectedProvince} onChange={this.dropDownProvince} options={province}/>\n              </Col>\n            </FormGroup>\n          </Form>\n          <CardText>Select Crop</CardText>\n          <Form onSubmit={this.formSubmitted}>\n            <FormGroup row>\n              <Label for=\"exampleSelect\"></Label>\n              <Col sm={10}>\n                <Select \n                value={selectedOption} \n                onChange={this.dropDownChange} \n                options={options}/>\n              </Col>\n            </FormGroup>\n            <Button type=\"submit\" color=\"info\" onClick={this.toggleSearch}>Search</Button> {' '}\n          </Form>\n          </Card>\n          \n        </Draggable>\n        </div>\n        </Collapse>\n\n        <MDBRow>\n        <MDBCol>\n          <MDBCard>\n            <MDBCardBody>\n              <MDBDataTable  striped bordered hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} \n              data={dataSheet} sorting={false}\n            />\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        </MDBRow>\n\n        <MDBModal id=\"modal_1\" isOpen={this.state.modal} toggle={this.toggleModal} centered>\n          <MDBModalHeader toggle={this.toggleModal}><img class=\"sarai-modal\" src=\"header_green.png\"/><img class=\"soils-modal\" src=\"SoilsCardTitle.png\"/></MDBModalHeader>\n          <MDBModalBody>\n             <b>Date Sampled:</b> {modalSheet.dateSampled}  &nbsp; &nbsp; <b>Coordinates: </b> {modalSheet.latitude}N , {modalSheet.longitude}E\n             <br/>\n             <b>Province:</b> {modalSheet.province}\n             <br/>\n             <b>Municipality</b> {modalSheet.municipality}\n             <br/>\n             <b>Barangay</b> {modalSheet.barangay}\n             <br/>\n             <b>Crop:</b> {modalSheet.crop}\n             <br/>\n             <b>pH:</b> {modalSheet.pH}\n             <br/>\n             <b>Organic Matter (OM):</b> {modalSheet.om}\n             <br/>\n             <b>Nitrogen: </b> {modalSheet.nitrogen}\n             <br/>\n             <b>Phosphorus:</b> {modalSheet.phosphorus}\n             <br/>\n             <b>P Analysis:</b> {modalSheet.pAnalysis}\n             <br/>\n             <b>Potassium:</b> {modalSheet.potassium}\n             <br/>\n             <b>Textural Grade:</b> {modalSheet.texturalGrade}\n             <br/>\n             <b>Remarks:</b> {modalSheet.remarks}\n             <br/>\n             <b>Soil Profile Series:</b> <a href={modalSheet.soilProfile}>Download Soil Profile</a>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.untoggleModal}>Close</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}