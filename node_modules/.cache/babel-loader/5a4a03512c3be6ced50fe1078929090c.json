{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createIconButtonComponent;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _omit = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"./react-native\");\n\nvar _jsxFileName = \"/home/travis/build/oblador/react-native-vector-icons/lib/icon-button.js\";\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8\n  },\n  touchable: {\n    overflow: 'hidden'\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent'\n  }\n});\n\nvar IOS7_BLUE = '#007AFF';\nvar TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];\nvar TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];\n\nfunction createIconButtonComponent(Icon) {\n  var _class, _temp;\n\n  return _temp = _class = function (_PureComponent) {\n    (0, _inherits2.default)(IconButton, _PureComponent);\n\n    function IconButton() {\n      (0, _classCallCheck2.default)(this, IconButton);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IconButton).apply(this, arguments));\n    }\n\n    (0, _createClass2.default)(IconButton, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            style = _this$props.style,\n            iconStyle = _this$props.iconStyle,\n            children = _this$props.children,\n            restProps = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"iconStyle\", \"children\"]);\n        var iconProps = (0, _pick.default)(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');\n        var touchableProps = (0, _pick.default)(restProps, TOUCHABLE_PROP_NAMES);\n        var props = (0, _omit.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');\n        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n        var colorStyle = (0, _pick.default)(this.props, 'color');\n        var blockStyle = (0, _pick.default)(this.props, 'backgroundColor', 'borderRadius');\n        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({\n          style: [styles.touchable, blockStyle]\n        }, touchableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        }), _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n          style: [styles.container, blockStyle, style]\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }), _react.default.createElement(Icon, (0, _extends2.default)({}, iconProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        })), (0, _isString.default)(children) ? _react.default.createElement(_reactNative.Text, {\n          style: [styles.text, colorStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }, children) : children));\n      }\n    }]);\n    return IconButton;\n  }(_react.PureComponent), _class.propTypes = {\n    backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    borderRadius: _propTypes.default.number,\n    color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    size: _propTypes.default.number,\n    iconStyle: _propTypes.default.any,\n    style: _propTypes.default.any,\n    children: _propTypes.default.node\n  }, _class.defaultProps = {\n    backgroundColor: IOS7_BLUE,\n    borderRadius: 5,\n    color: 'white',\n    size: 20\n  }, _temp;\n}","map":null,"metadata":{},"sourceType":"script"}